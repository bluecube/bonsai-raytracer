/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 0.8.2 ] */

/* [wxMaxima: title   start ]
Sphere
   [wxMaxima: title   end   ] */

/* [wxMaxima: section start ]
Surface equation
   [wxMaxima: section end   ] */

/* [wxMaxima: hide output   ] */
/* [wxMaxima: input   start ] */
x: matrix([x0, x1, x2]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: hide output   ] */
/* [wxMaxima: input   start ] */
sphere_eq: x.x  = 1;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Ray intersection
   [wxMaxima: section end   ] */

/* [wxMaxima: hide output   ] */
/* [wxMaxima: input   start ] */
ray: matrix([o0, o1, o2])+ t * matrix([d0, d1, d2]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: hide output   ] */
/* [wxMaxima: input   start ] */
sphere_eq, x0 = ray[1][1], x1 = ray[1][2], x2 = ray[1][3];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: hide output   ] */
/* [wxMaxima: input   start ] */
ray_intersection: ratsubst(1, d0^2 + d1^2 + d2^2, %);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
ratsimp(ratcoef(lhs(ray_intersection), t, 2));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
ratsimp(ratcoef(lhs(ray_intersection), t, 1));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
ratsimp(ratcoef(lhs(ray_intersection), t, 0));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Bounding box
   [wxMaxima: section end   ] */

/* [wxMaxima: comment start ]
For every axis we're looking for a plane perpendicular to that axis
that intersects the transformed sphere in exactly one point.
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
In this part we redefine surface_eq and change meanings of x0, x1 and x2.
   [wxMaxima: comment end   ] */

/* [wxMaxima: hide output   ] */
/* [wxMaxima: input   start ] */
Transform: matrix([t0, t1, t2, 0],[t3, t4, t5, 0], [t6, t7, t8, 0], [t9, t10, t11, 1]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: hide output   ] */
/* [wxMaxima: input   start ] */
invTransform: invert(Transform);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: hide output   ] */
/* [wxMaxima: input   start ] */
transformedX: matrix([x0, x1, x2, 1]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: hide output   ] */
/* [wxMaxima: input   start ] */
x: transformedX . invTransform;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: hide output   ] */
/* [wxMaxima: input   start ] */
sphere_eq: x . x = 2;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: hide output   ] */
/* [wxMaxima: input   start ] */
sphere_eq;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Now all of the important variables are defined.
We will be solving equation for the axes and taking parameters
that result in a single root as an input equation for the next step.
   [wxMaxima: comment end   ] */

/* [wxMaxima: hide output   ] */
/* [wxMaxima: input   start ] */
roots01: solve([sphere_eq], [x2]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: hide output   ] */
/* [wxMaxima: input   start ] */
roots0: solve(roots01[1] - roots01[2], x1);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: hide output   ] */
/* [wxMaxima: input   start ] */
minmax0: solve(roots0[1] - roots0[2], x0);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: hide output   ] */
/* [wxMaxima: input   start ] */
roots12: solve([sphere_eq], [x0]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: hide output   ] */
/* [wxMaxima: input   start ] */
roots1: solve(roots12[1] - roots12[2], x2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: hide output   ] */
/* [wxMaxima: input   start ] */
minmax1: solve(roots1[1] - roots1[2], x1);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: hide output   ] */
/* [wxMaxima: input   start ] */
roots20: solve([sphere_eq], [x1]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: hide output   ] */
/* [wxMaxima: input   start ] */
roots2: solve(roots20[1] - roots20[2], x0);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: hide output   ] */
/* [wxMaxima: input   start ] */
minmax2: solve(roots2[1] - roots2[2], x2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
append(minmax0, minmax1, minmax2);
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
